name: Format and Lint Code

on:
  push:
    branches:
      - "**" # Trigger on all branches

jobs:
  lint-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to allow branch creation
          submodules: "true" # Checkout submodules if needed

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Or your project's Node.js version

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Install dependencies for all submodules
        run: |
          # Install dependencies for each submodule
          cd libs/types && pnpm install
          cd ../backend && pnpm install
          cd ../frontend && pnpm install
          cd ../../docs && pnpm install

      - name: Lint and format `types` submodule
        run: |
          cd libs/types
          pnpm format || true

      - name: Lint and format `backend` submodule
        run: |
          cd libs/backend
          pnpm format || true

      - name: Lint and format `frontend` submodule
        run: |
          cd libs/frontend
          pnpm format || true

      # - name: Lint and format `docs` submodule
      #   run: |
      #     cd docs
      #     pnpm format || true

      - name: Check for changes
        id: check_changes
        run: |
          git diff --exit-code || echo "Changes detected" > changes_detected.txt

      - name: Create a new branch and commit changes
        if: env.CHANGES_DETECTED == 'Changes detected'
        run: |
          # Generate a new branch name
          BRANCH_NAME="format-lint-fix-$(date +%s)"
          git checkout -b $BRANCH_NAME

          # Update submodule references
          git add libs/types
          git add libs/backend
          git add libs/frontend
          git add docs

          # Commit changes
          git commit -m "chore: format and lint fixes"
          git push origin $BRANCH_NAME